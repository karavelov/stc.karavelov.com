from django.shortcuts import render,redirect,HttpResponse
from cmsapp.EmailBackEnd import EmailBackEnd
from django.contrib.auth import  logout,login
from django.contrib import messages
from cmsapp.models import CustomUser,UserReg,Complaints
from django.contrib.auth import get_user_model
from django.contrib.auth import authenticate, login
import bcrypt
from django.contrib.auth import update_session_auth_hash



User = get_user_model()

from django.contrib.auth.decorators import login_required

def BASE(request):
       return render(request,'base.html')




def LOGIN(request):
    return render(request,'login.html')

def notifications(request):
    complaints1 = Complaints.objects.all()
    newcom_count1 = Complaints.objects.filter(status='0').count() 
    context = {
    'newcom_count1':newcom_count1,
    'complaints1':complaints1        
    }
    return render(request, 'includes/header.html', context)



def doLogout(request):
    logout(request)
    request.session.flush()  # Clear the session including CSRF token
    return redirect('login')



def doLogin(request):
    if request.method == 'POST':
        email = request.POST.get('email')
        password = request.POST.get('password')

        print(f"üîç –û–ø–∏—Ç –∑–∞ –ª–æ–≥–∏–Ω —Å: {email}")

        user = authenticate(request, username=email, password=password)

        if user is not None:
            print(f"‚úÖ –£—Å–ø–µ—à–µ–Ω –ª–æ–≥–∏–Ω –∑–∞: {user.email}, –¢–∏–ø: {user.user_type}")
            user_type = int(user.user_type)

            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–ª–∏ user_type –µ –≤–∞–ª–∏–¥–µ–Ω
            if user_type in [1, 2, 3]:
                login(request, user)

                if user_type == 1:
                    return redirect('admin_home')
                elif user_type == 2:
                    return redirect('user_home')
                elif us.user_type == 3:
                    return redirect('police_home')

            # ‚ö†Ô∏è –ê–∫–æ user_type –Ω–µ –µ –≤–∞–ª–∏–¥–µ–Ω, –≤—Ä—ä—â–∞–º–µ –≥—Ä–µ—à–∫–∞
            print("‚ùå –ì—Ä–µ—à–∫–∞: –ù–µ–ø–æ–∑–Ω–∞—Ç user_type! –ü—Ä–æ–≤–µ—Ä–µ—Ç–µ –±–∞–∑–∞—Ç–∞ –¥–∞–Ω–Ω–∏.")
            messages.error(request, "–ì—Ä–µ—à–∫–∞ –≤ —Å–∏—Å—Ç–µ–º–∞—Ç–∞. –°–≤—ä—Ä–∂–µ—Ç–µ —Å–µ —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
            return redirect('login')  # ‚úÖ –î–æ–±–∞–≤–µ–Ω return —Ç—É–∫!

        else:
            print("‚ùå –ì—Ä–µ—à–Ω–∞ –ø–∞—Ä–æ–ª–∞ –∏–ª–∏ –Ω–µ—Å—ä—â–µ—Å—Ç–≤—É–≤–∞—â –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª!")
            messages.error(request, '–í–∞—à–∏—è—Ç –∏–º–µ–π–ª –∏–ª–∏ –ø–∞—Ä–æ–ª–∞ —Å–∞ –≥—Ä–µ—à–Ω–∏')
            return redirect('login')  # ‚úÖ –ì–∞—Ä–∞–Ω—Ç–∏—Ä–∞–Ω–æ HttpResponse

    messages.error(request, '–ù–µ–≤–∞–ª–∏–¥–µ–Ω –º–µ—Ç–æ–¥')
    return redirect('login')  # ‚úÖ –í—Ä—ä—â–∞ HttpResponse –∏ –∑–∞ GET –∑–∞—è–≤–∫–∏







login_required(login_url='/')
def PROFILE(request):
    user = CustomUser.objects.get(id = request.user.id)
    context = {
        "user":user,
    }
    return render(request,'profile.html',context)



@login_required(login_url='/')
def PROFILE_UPDATE(request):
    if request.method == "POST":
        profile_pic = request.FILES.get('profile_pic')
        first_name = request.POST.get('first_name')
        last_name = request.POST.get('last_name')
        email = request.POST.get('email')

        try:
            customuser = CustomUser.objects.get(id=request.user.id)
            customuser.first_name = first_name
            customuser.last_name = last_name

            if profile_pic:
                customuser.profile_pic = profile_pic

            customuser.save()
            messages.success(request, "–í–∞—à–∏—è—Ç –ø—Ä–æ—Ñ–∏–ª –±–µ—à–µ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–µ–Ω!")
            return redirect('profile')

        except:
            messages.error(request, "–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤—è–≤–∞–Ω–µ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª–∞!")
    return render(request, 'profile.html')



def CHANGE_PASSWORD(request):
    context = {}

    try:
        user = User.objects.get(id=request.user.id)
        context["data"] = user
    except User.DoesNotExist:
        messages.error(request, "–ì—Ä–µ—à–∫–∞: –ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è—Ç –Ω–µ –µ –Ω–∞–º–µ—Ä–µ–Ω.")
        return redirect("change_password")

    if request.method == "POST":
        current = request.POST.get("cpwd", "")
        new_pas = request.POST.get("npwd", "")

        print(f"üîç –û–ø–∏—Ç –∑–∞ —Å–º—è–Ω–∞ –Ω–∞ –ø–∞—Ä–æ–ª–∞ –æ—Ç {user.email}")
        print(f"üîë –í—ä–≤–µ–¥–µ–Ω–∞ —Ç–µ–∫—É—â–∞ –ø–∞—Ä–æ–ª–∞: {current}")
        print(f"üîë –ó–∞–ø–∞–∑–µ–Ω —Ö–µ—à: {user.password}")

        # –ü—Ä–æ–≤–µ—Ä—è–≤–∞–º–µ –¥–∞–ª–∏ —Å—Ç–∞—Ä–∞—Ç–∞ –ø–∞—Ä–æ–ª–∞ –µ –ø—Ä–∞–≤–∏–ª–Ω–∞
        if bcrypt.checkpw(current.encode("utf-8"), user.password.encode("utf-8")):
            print("‚úÖ –°—Ç–∞—Ä–∞—Ç–∞ –ø–∞—Ä–æ–ª–∞ –µ –≤—è—Ä–Ω–∞!")

            # –ì–µ–Ω–µ—Ä–∏—Ä–∞–º–µ bcrypt —Ö–µ—à –∑–∞ –Ω–æ–≤–∞—Ç–∞ –ø–∞—Ä–æ–ª–∞
            hashed_new_password = bcrypt.hashpw(new_pas.encode("utf-8"), bcrypt.gensalt()).decode("utf-8")

            # –ó–∞–ø–∏—Å–≤–∞–º–µ –Ω–æ–≤–∞—Ç–∞ –ø–∞—Ä–æ–ª–∞
            user.password = hashed_new_password
            user.save()

            # –û–±–Ω–æ–≤—è–≤–∞–º–µ —Å–µ—Å–∏—è—Ç–∞, –∑–∞ –¥–∞ –Ω–µ —Ä–∞–∑–ª–æ–≥–Ω–µ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è
            update_session_auth_hash(request, user)

            print("‚úÖ –ü–∞—Ä–æ–ª–∞—Ç–∞ –µ —Å–º–µ–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
            messages.success(request, "–£—Å–ø–µ—à–Ω–∞ –ø—Ä–æ–º—è–Ω–∞ –Ω–∞ –ø–∞—Ä–æ–ª–∞!")
            return redirect("profile")  # ‚úÖ –ü—Ä–µ–Ω–∞—Å–æ—á–≤–∞–Ω–µ –∫—ä–º –ø—Ä–æ—Ñ–∏–ª–∞

        else:
            print("‚ùå –ì—Ä–µ—à–Ω–∞ —Å—Ç–∞—Ä–∞ –ø–∞—Ä–æ–ª–∞!")
            messages.error(request, "–¢–µ–∫—É—â–∞—Ç–∞ –ø–∞—Ä–æ–ª–∞ –µ –≥—Ä–µ—à–Ω–∞!")
            return redirect("change_password")

    return render(request, "change-password.html", context)


@login_required(login_url='/')
def EDIT_USER(request, id):
    user = get_object_or_404(UserReg.objects.select_related('admin'), id=id)

    if request.method == 'POST':
        user.admin.first_name = request.POST.get('first_name', user.admin.first_name)
        user.admin.last_name = request.POST.get('last_name', user.admin.last_name)
        user.admin.email = request.POST.get('email', user.admin.email)
        user.mobilenumber = request.POST.get('mobilenumber', user.mobilenumber)

        if 'profile_pic' in request.FILES:
            user.admin.profile_pic = request.FILES['profile_pic']

        user.admin.save()
        user.save()

        messages.success(request, "–ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—è—Ç –µ —É—Å–ø–µ—à–Ω–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–∞–Ω!")
        return redirect('manageusers')

    context = {
        'user': user
    }
    return render(request, 'admin/edit_user.html', context)




